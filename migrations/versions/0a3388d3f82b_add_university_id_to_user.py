"""Add university_id to user

Revision ID: 0a3388d3f82b
Revises: 
Create Date: 2025-08-17 18:11:52.224061

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0a3388d3f82b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('free_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('feature', sa.String(length=50), nullable=True),
    sa.Column('ymd', sa.Date(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'feature', 'ymd', name='uniq_free_daily')
    )
    op.create_index(op.f('ix_free_usage_feature'), 'free_usage', ['feature'], unique=False)
    op.create_index(op.f('ix_free_usage_user_id'), 'free_usage', ['user_id'], unique=False)
    op.create_index(op.f('ix_free_usage_ymd'), 'free_usage', ['ymd'], unique=False)
    op.create_table('university',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('subdomain', sa.String(length=80), nullable=False),
    sa.Column('logo_url', sa.String(length=300), nullable=True),
    sa.Column('theme_color', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subdomain')
    )
    op.create_table('usage_ledger',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('feature', sa.String(length=50), nullable=True),
    sa.Column('mode', sa.String(length=20), nullable=True),
    sa.Column('model', sa.String(length=80), nullable=True),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('silver_spent', sa.Integer(), nullable=True),
    sa.Column('gold_spent', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usage_ledger_user_id'), 'usage_ledger', ['user_id'], unique=False)
    op.create_table('university_allowlist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.String(length=300), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['university_id'], ['university.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('university_id', 'email', name='uniq_uni_email')
    )
    op.create_index(op.f('ix_university_allowlist_email'), 'university_allowlist', ['email'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('plan', sa.String(length=50), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('otp_code', sa.String(length=6), nullable=True),
    sa.Column('otp_sent_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('silver_balance', sa.Integer(), nullable=True),
    sa.Column('gold_balance', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['university_id'], ['university.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('internship_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=200), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('source', sa.String(length=120), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('company', sa.String(length=200), nullable=True),
    sa.Column('link', sa.String(length=400), nullable=True),
    sa.Column('match_score', sa.Integer(), nullable=True),
    sa.Column('missing_skills', sa.String(length=400), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_pack_report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=200), nullable=True),
    sa.Column('mode', sa.String(length=20), nullable=True),
    sa.Column('verdict', sa.String(length=50), nullable=True),
    sa.Column('payload_json', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('outreach_contact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('role', sa.String(length=200), nullable=True),
    sa.Column('company', sa.String(length=200), nullable=True),
    sa.Column('email', sa.String(length=200), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('public_url', sa.String(length=600), nullable=True),
    sa.Column('approx_location', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('portfolio_page',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('slug', sa.String(length=80), nullable=True),
    sa.Column('about_html', sa.Text(), nullable=True),
    sa.Column('skills_csv', sa.Text(), nullable=True),
    sa.Column('experience_html', sa.Text(), nullable=True),
    sa.Column('education_html', sa.Text(), nullable=True),
    sa.Column('links_json', sa.Text(), nullable=True),
    sa.Column('project_html', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_portfolio_page_slug'), 'portfolio_page', ['slug'], unique=True)
    op.create_table('resume_asset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=200), nullable=True),
    sa.Column('mime', sa.String(length=100), nullable=True),
    sa.Column('content_text', sa.Text(), nullable=True),
    sa.Column('persisted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(length=120), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=120), nullable=True),
    sa.Column('plan', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subscription')
    op.drop_table('resume_asset')
    op.drop_index(op.f('ix_portfolio_page_slug'), table_name='portfolio_page')
    op.drop_table('portfolio_page')
    op.drop_table('outreach_contact')
    op.drop_table('job_pack_report')
    op.drop_table('internship_record')
    op.drop_table('user')
    op.drop_index(op.f('ix_university_allowlist_email'), table_name='university_allowlist')
    op.drop_table('university_allowlist')
    op.drop_index(op.f('ix_usage_ledger_user_id'), table_name='usage_ledger')
    op.drop_table('usage_ledger')
    op.drop_table('university')
    op.drop_index(op.f('ix_free_usage_ymd'), table_name='free_usage')
    op.drop_index(op.f('ix_free_usage_user_id'), table_name='free_usage')
    op.drop_index(op.f('ix_free_usage_feature'), table_name='free_usage')
    op.drop_table('free_usage')
    # ### end Alembic commands ###
