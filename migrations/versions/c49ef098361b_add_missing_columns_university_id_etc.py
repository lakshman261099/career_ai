"""add missing columns (university_id etc.)

Revision ID: c49ef098361b
Revises: ab2358a08482
Create Date: 2025-08-17 20:04:29.245446

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c49ef098361b'
down_revision: Union[str, Sequence[str], None] = 'ab2358a08482'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('resume_assets')
    op.drop_table('agent_job')
    with op.batch_alter_table('project_detail', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_detail_slug'))

    op.drop_table('project_detail')
    with op.batch_alter_table('free_feature_usage', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_free_feature_usage_day'))
        batch_op.drop_index(batch_op.f('ix_free_feature_usage_feature'))

    op.drop_table('free_feature_usage')
    op.drop_table('password_reset')
    op.drop_table('user_university')
    with op.batch_alter_table('free_usage', schema=None) as batch_op:
        batch_op.add_column(sa.Column('feature', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('ymd', sa.Date(), nullable=True))
        batch_op.create_index(batch_op.f('ix_free_usage_feature'), ['feature'], unique=False)
        batch_op.create_index(batch_op.f('ix_free_usage_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_free_usage_ymd'), ['ymd'], unique=False)
        batch_op.create_unique_constraint('uniq_free_daily', ['user_id', 'feature', 'ymd'])
        batch_op.drop_constraint(batch_op.f('free_usage_user_id_fkey'), type_='foreignkey')
        batch_op.drop_column('day')
        batch_op.drop_column('created_at')
        batch_op.drop_column('ip')

    with op.batch_alter_table('internship_record', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('location',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('company',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('link',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=400),
               existing_nullable=True)
        batch_op.alter_column('missing_skills',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=400),
               existing_nullable=True)

    with op.batch_alter_table('job_pack_report', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=200),
               existing_nullable=True)

    with op.batch_alter_table('outreach_contact', schema=None) as batch_op:
        batch_op.add_column(sa.Column('public_url', sa.String(length=600), nullable=True))
        batch_op.add_column(sa.Column('approx_location', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('company',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('source',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)

    with op.batch_alter_table('portfolio_page', schema=None) as batch_op:
        batch_op.add_column(sa.Column('project_html', sa.Text(), nullable=True))
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('slug',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=80),
               existing_nullable=True)
        batch_op.drop_constraint(batch_op.f('portfolio_page_slug_key'), type_='unique')
        batch_op.create_index(batch_op.f('ix_portfolio_page_slug'), ['slug'], unique=True)
        batch_op.drop_column('html')

    with op.batch_alter_table('resume_asset', schema=None) as batch_op:
        batch_op.alter_column('filename',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)

    with op.batch_alter_table('subscription', schema=None) as batch_op:
        batch_op.alter_column('stripe_customer_id',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.alter_column('stripe_subscription_id',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=True)

    with op.batch_alter_table('university', schema=None) as batch_op:
        batch_op.add_column(sa.Column('subdomain', sa.String(length=80), nullable=False))
        batch_op.add_column(sa.Column('logo_url', sa.String(length=300), nullable=True))
        batch_op.add_column(sa.Column('theme_color', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=160),
               existing_nullable=False)
        batch_op.drop_constraint(batch_op.f('university_slug_key'), type_='unique')
        batch_op.create_unique_constraint(None, ['subdomain'])
        batch_op.drop_column('slug')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('university_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('otp_code', sa.String(length=6), nullable=True))
        batch_op.add_column(sa.Column('otp_sent_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('silver_balance', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('gold_balance', sa.Integer(), nullable=True))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=256),
               existing_nullable=False)
        batch_op.create_foreign_key(None, 'university', ['university_id'], ['id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=256),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('gold_balance')
        batch_op.drop_column('silver_balance')
        batch_op.drop_column('otp_sent_at')
        batch_op.drop_column('otp_code')
        batch_op.drop_column('is_verified')
        batch_op.drop_column('university_id')

    with op.batch_alter_table('university', schema=None) as batch_op:
        batch_op.add_column(sa.Column('slug', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint(batch_op.f('university_slug_key'), ['slug'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=160),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('status')
        batch_op.drop_column('theme_color')
        batch_op.drop_column('logo_url')
        batch_op.drop_column('subdomain')

    with op.batch_alter_table('subscription', schema=None) as batch_op:
        batch_op.alter_column('stripe_subscription_id',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('stripe_customer_id',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)

    with op.batch_alter_table('resume_asset', schema=None) as batch_op:
        batch_op.alter_column('filename',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)

    with op.batch_alter_table('portfolio_page', schema=None) as batch_op:
        batch_op.add_column(sa.Column('html', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_portfolio_page_slug'))
        batch_op.create_unique_constraint(batch_op.f('portfolio_page_slug_key'), ['slug'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('slug',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.drop_column('project_html')

    with op.batch_alter_table('outreach_contact', schema=None) as batch_op:
        batch_op.alter_column('source',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('company',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('role',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.drop_column('created_at')
        batch_op.drop_column('approx_location')
        batch_op.drop_column('public_url')

    with op.batch_alter_table('job_pack_report', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=120),
               existing_nullable=True)

    with op.batch_alter_table('internship_record', schema=None) as batch_op:
        batch_op.alter_column('missing_skills',
               existing_type=sa.String(length=400),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
        batch_op.alter_column('link',
               existing_type=sa.String(length=400),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
        batch_op.alter_column('company',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('location',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=120),
               existing_nullable=True)
        batch_op.alter_column('role',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=120),
               existing_nullable=True)
        batch_op.drop_column('created_at')

    with op.batch_alter_table('free_usage', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ip', sa.VARCHAR(length=64), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('day', sa.DATE(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('free_usage_user_id_fkey'), 'user', ['user_id'], ['id'])
        batch_op.drop_constraint('uniq_free_daily', type_='unique')
        batch_op.drop_index(batch_op.f('ix_free_usage_ymd'))
        batch_op.drop_index(batch_op.f('ix_free_usage_user_id'))
        batch_op.drop_index(batch_op.f('ix_free_usage_feature'))
        batch_op.drop_column('ymd')
        batch_op.drop_column('feature')

    op.create_table('user_university',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('university_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['university_id'], ['university.id'], name=op.f('user_university_university_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('user_university_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_university_pkey'))
    )
    op.create_table('password_reset',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('code_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('used_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('password_reset_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('password_reset_pkey'))
    )
    op.create_table('free_feature_usage',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('feature', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ip', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('day', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('free_feature_usage_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('free_feature_usage_pkey'))
    )
    with op.batch_alter_table('free_feature_usage', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_free_feature_usage_feature'), ['feature'], unique=False)
        batch_op.create_index(batch_op.f('ix_free_feature_usage_day'), ['day'], unique=False)

    op.create_table('project_detail',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('portfolio_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('slug', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('html', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolio_page.id'], name=op.f('project_detail_portfolio_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('project_detail_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('project_detail_pkey'))
    )
    with op.batch_alter_table('project_detail', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_project_detail_slug'), ['slug'], unique=True)

    op.create_table('agent_job',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('preferences_json', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('results_json', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('agent_job_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('agent_job_pkey'))
    )
    op.create_table('resume_assets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('mime', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('content_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('persisted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('resume_assets_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('resume_assets_pkey'))
    )
    # ### end Alembic commands ###
